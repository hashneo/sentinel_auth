---
swagger: '2.0'
info:
  description: ''
  version: '0.0.1'
  title: 'data'
  termsOfService: ''
  contact:
    name: ''
    url: ''
    email: 'hello@steventaylor.me'
  license:
    name: ''
basePath: /api/auth
schemes:
- https
consumes:
- application/json
produces:
- application/json
- text/plain
- text/html

securityDefinitions:
  Oauth:
    type: oauth2
    scopes:
      open: no security
      user: a user
      admin: admin user
    flow: implicit
    authorizationUrl: https://my_aouth/

security:
  - Oauth: []

paths:
  /health:
    x-swagger-router-controller: health
    get:
      tags:
      - health
      operationId: health
      security:
      - Oauth:
        - open
      parameters:
      - in: query
        name: id
        type: string
      responses:
        200:
          description: health information
          schema:
            $ref: '#/definitions/Status'
        400:
          description: bad request
        410:
          description: invalid service id
        default:
          $ref: '#/responses/Error'

  /publickey:
    x-swagger-router-controller: key
    get:
      operationId: getPublicKey
      security:
      - Oauth:
        - open
      responses:
        200:
          description: key
          schema:
            type: string


  /login:
    x-swagger-router-controller: auth
    post:
      operationId: Login
      security:
      - Oauth:
        - open
      parameters:
      - in: body
        name: auth
        description: Authentication object
        required: true
        schema:
          $ref: '#/definitions/Credentials'
      responses:
        200:
          description: ok
          schema:
            type: string
            description: koo.io jwt token
        302:
          description: redirect
          schema:
            type: string
        default:
          $ref: '#/responses/Error'

  /register:
    x-swagger-router-controller: auth
    post:
      operationId: Register
      security:
      - Oauth:
        - admin
      parameters:
      - in: body
        name: auth
        description: Authentication object
        required: true
        schema:
          $ref: '#/definitions/Credentials'
      responses:
        200:
          description: ok
          schema:
            type: string
            description: koo.io jwt token
        302:
          description: redirect
          schema:
            type: string
        default:
          $ref: '#/responses/Error'

  /logout:
    x-swagger-router-controller: auth
    get:
      operationId: Logout
      security:
      - Oauth:
        - user
      responses:
        200:
          description: ok
          schema:
            type: string
        302:
          description: redirect
          schema:
            type: string
        default:
          $ref: '#/responses/Error'

  /password/reset:
    x-swagger-router-controller: password
    post:
      operationId: resetPassword
      security:
      - Oauth:
        - user
      parameters:
      - in: body
        name: message
        description: message
        required: true
        schema:
          $ref: '#/definitions/Credentials'
      responses:
        200:
          description: messages
        default:
          $ref: '#/responses/Error'

  /password/change:
    x-swagger-router-controller: password
    post:
      operationId: changePassword
      security:
      - Oauth:
        - user
      parameters:
      - in: body
        name: message
        description: message
        required: true
        schema:
          $ref: '#/definitions/PasswordChange'
      responses:
        200:
          description: ok
        default:
          $ref: '#/responses/Error'

  /swagger:
      x-swagger-pipe: swagger_raw

responses:

  Error:
    description: error
    schema:
      $ref: '#/definitions/Error'

definitions:

  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  Status:
    type: object
    additionalProperties: false
    properties:
      status:
        type: string

  Credentials:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      socialCredentials:
        $ref: '#/definitions/SocialCredentials'
      token:
        type: string

  SocialCredentials:
    type: object
    additionalProperties: false
    properties:
      provider:
        type: string
        description: The social login provider
        enum:
        - facebook
        - instagram
        - google
        - twitter
        - github
        - linkedin
      token:
        type: string

  PasswordChange:
    type: object
    additionalProperties: false
    properties:
      existing:
        type: string
      new:
        type: string
